{"version":3,"sources":["components/Background.jsx","services/useFetch.js","components/Categories.jsx","images/Grace&Style.png","components/Logo.jsx","App.js","reportWebVitals.js","ErrorBoundary.jsx","index.js"],"names":["Background","className","baseUrl","process","Categories","url","isMountedRef","useRef","useState","data","setData","error","setError","loading","setLoading","useEffect","a","fetch","response","ok","json","current","init","useFetch","products","map","p","i","style","animationDelay","DisplayValue","CategoryID","value","Logo","src","Icon","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundary","props","state","hasError","this","children","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAEe,SAASA,IACpB,OACI,0BAASC,UAAU,kBAAnB,UACI,qBAAKA,UAAU,gDACf,qBAAKA,UAAU,qD,kCCJrBC,EAAUC,kCCCD,SAASC,IACpB,MDAW,SAAkBC,GAC/B,IAAMC,EAAeC,kBAAO,GAC1B,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAyBE,OAvBFC,qBAAU,WAAM,4CAEZ,8BAAAC,EAAA,+EAE2BC,MAAMf,EAAUG,GAF3C,YAEUa,EAFV,QAGgBC,GAHhB,iCAI2BD,EAASE,OAJpC,OAIcA,EAJd,OAKWd,EAAae,SAASX,EAAQU,GALzC,8BAOcF,EAPd,0DAUOZ,EAAae,SAAST,EAAS,EAAD,IAVrC,yBAYON,EAAae,SAASP,GAAW,GAZxC,8EAFY,sBAkBZ,OAjBFR,EAAae,SAAU,EADT,mCAiBZC,GACO,WACLhB,EAAae,SAAU,KAExB,CAAChB,IAEG,CAAEI,OAAME,QAAOE,WC7BmBU,CAAS,eAAtCC,EAAd,EAAQf,KAAgBE,EAAxB,EAAwBA,MAAOE,EAA/B,EAA+BA,QAE/B,GAAGF,EAAO,MAAMA,EAChB,OAAGE,EAAgB,yCAIf,0BAASZ,UAAU,gBAAnB,UACI,8BACKuB,EAASC,KAAI,SAACC,EAAGC,GACd,OACI,sBACIC,MAAO,CAACC,eAAe,KAAD,OAAO,EAAIF,EAAX,MAD1B,SAC6CD,EAAEI,cADpCJ,EAAEK,iBAKzB,iCACKP,EAASC,KAAI,SAACC,EAAGC,GACd,OACI,wBACIK,MAAON,EAAEI,aADb,SAC4BJ,EAAEI,cADjBJ,EAAEK,iBAK3B,qBAAK9B,UAAU,+CC5BZ,UAA0B,wCCG1B,SAASgC,IACpB,OACI,qBAAKhC,UAAU,OAAOiC,IAAKC,EAAMC,IAAI,qBCA9B,SAASC,IACtB,OACE,qCACE,cAACrC,EAAD,IACA,cAACiC,EAAD,IACA,cAAC7B,EAAD,OCVN,IAYekC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6BCLOQ,E,kDACjB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,E,0CAUnB,WACE,OAAIC,KAAKF,MAAMC,SAEN,uDAGFC,KAAKH,MAAMI,Y,uCAXpB,SAAgCzC,GAE9B,MAAO,CAAEuC,UAAU,O,GARkBG,IAAMC,WCKjDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.2b2b24b8.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Background() {\n    return (\n        <section className=\"backgroundpanel\">\n            <div className=\"backgroundellipse backgroundellipsetopright\"></div>\n            <div className=\"backgroundellipse backgroundellipsebottomleft\"></div>\n        </section>\n    );\n}","import { useState, useRef, useEffect} from \"react\";\n\nconst baseUrl = process.env.REACT_APP_API_BASE_URL;\n\nexport default function useFetch(url) {\n  const isMountedRef = useRef(false);\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n      isMountedRef.current = true;\n        async function init() {\n          try {\n            const response = await fetch(baseUrl + url);\n            if(response.ok){\n                const json = await response.json();\n                if(isMountedRef.current) setData(json);\n            } else {\n                throw response;\n            }\n          } catch(e) {\n            if(isMountedRef.current) setError(e);\n          } finally {\n            if(isMountedRef.current) setLoading(false);\n          }\n        }\n        init();\n        return () =>  {\n          isMountedRef.current = false;\n        }\n      }, [url]);\n\n      return { data, error, loading };\n}","import React from 'react';\nimport useFetch from \"../services/useFetch\";\n\nexport default function Categories() {\n    const { data: products, error, loading } = useFetch('GetProducts');\n\n    if(error) throw error;\n    if(loading) return <h1>Loading</h1>;\n\n    return (\n\n        <section className=\"categorypanel\">\n            <div>\n                {products.map((p, i) => {\n                    return (\n                        <span key={p.CategoryID}\n                            style={{animationDelay: `0.${1 * i}s`}}>{p.DisplayValue}</span>\n                    )\n                })}\n            </div>\n            <select>\n                {products.map((p, i) => {\n                    return (\n                        <option key={p.CategoryID}\n                            value={p.DisplayValue}>{p.DisplayValue}</option>\n                    )\n                })}\n            </select>\n            <div className=\"fas fa-chevron-circle-down dropdownicon\"></div>\n        </section>\n    );\n}","export default __webpack_public_path__ + \"static/media/Grace&Style.27ae78d1.png\";","import Icon from '../images/Grace&Style.png';\nimport React from 'react';\n\nexport default function Logo() {\n    return (\n        <img className=\"logo\" src={Icon} alt=\"Grace-Style-Logo\"></img>\n    );\n}","import './App.css';\nimport Background from './components/Background';\nimport Categories from './components/Categories';\nimport Logo from './components/Logo';\n\nexport default function App() {\n  return (\n    <>\n      <Background />\n      <Logo />\n      <Categories />\n    </>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return { hasError: true };\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return <h1>Something went wrong.</h1>;\n      }\n  \n      return this.props.children; \n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ErrorBoundary from './ErrorBoundary';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}